# Generated by Django 3.0.3 on 2023-05-21 04:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IP', models.GenericIPAddressField()),
                ('mac_address', models.CharField(max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time when the register was created')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='Date and time when the register was updated')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='IPcreated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the ip geo was created')),
            ],
        ),
        migrations.CreateModel(
            name='IPData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=45)),
                ('status', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('countryCode', models.CharField(max_length=10)),
                ('region', models.CharField(max_length=100)),
                ('regionName', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=20)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('timezone', models.CharField(max_length=100)),
                ('isp', models.CharField(max_length=100)),
                ('org', models.CharField(max_length=100)),
                ('as_name', models.CharField(max_length=100)),
                ('mobile', models.BooleanField(null=True)),
                ('proxy', models.BooleanField(null=True)),
                ('hosting', models.BooleanField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OperativeSystemMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('accuracy', models.PositiveSmallIntegerField()),
                ('line', models.PositiveSmallIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time when the register was created')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='Date and time when the register was updated')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_os_match', to='project.Host')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.CharField(max_length=255)),
                ('portid', models.PositiveSmallIntegerField()),
                ('state', models.CharField(max_length=255)),
                ('reason', models.CharField(max_length=255)),
                ('reason_ttl', models.PositiveSmallIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time when the register was created')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='Date and time when the register was updated')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_port', to='project.Host')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Whois',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(max_length=255)),
                ('registrar', models.CharField(blank=True, max_length=255, null=True)),
                ('whois_server', models.CharField(blank=True, max_length=255, null=True)),
                ('referral_url', models.URLField(blank=True, max_length=50, null=True)),
                ('name_server', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('emails', models.EmailField(max_length=255, null=True)),
                ('dnssec', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('org', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('registrant_postal_code', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OperativeSystemClass',
            fields=[
                ('operative_system_match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='os_match_class', serialize=False, to='project.OperativeSystemMatch')),
                ('type', models.CharField(max_length=255)),
                ('vendor', models.CharField(max_length=255)),
                ('operative_system_family', models.CharField(max_length=255)),
                ('operative_system_generation', models.CharField(max_length=255)),
                ('accuracy', models.PositiveSmallIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time when the register was created')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='Date and time when the register was updated')),
            ],
        ),
        migrations.CreateModel(
            name='PortService',
            fields=[
                ('port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='port_service', serialize=False, to='project.Port')),
                ('name', models.CharField(max_length=255, null=True)),
                ('product', models.CharField(max_length=255, null=True)),
                ('extra_info', models.CharField(max_length=255, null=True)),
                ('hostname', models.CharField(max_length=255, null=True)),
                ('operative_system_type', models.CharField(max_length=255, null=True)),
                ('method', models.CharField(max_length=255, null=True)),
                ('conf', models.PositiveSmallIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time when the register was created')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='Date and time when the register was updated')),
            ],
        ),
        migrations.CreateModel(
            name='ScannerHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.GenericIPAddressField()),
                ('type', models.CharField(choices=[('QS', 'Quick scan'), ('FS', 'Full scan')], default='QS', max_length=2)),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time when the register was created')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='Date and time when the register was updated')),
                ('hosts', models.ManyToManyField(related_name='host_history', to='project.Host')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
    ]
